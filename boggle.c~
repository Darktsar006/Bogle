#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* Constantes qui definissent le nombre minmale et maximale d'un mot */

#define MIN_WORD 3
#define MAX_WORD 25

/* Constantes qui difinissent si une grille a ete vue ou pas 0, 1 */

#define SEEN 1
#define NOT_SEEN 0

/* Structure des Grilles */

/* Structure Grille qui contient la Grille du jeu contanant les caractères à présenter à l'utilisateur */ 

typedef struct grille
{
     char **grilleJeu;
     int **grilleVue;
}Grille;

/* Structure qui contiennent les coordonnes de la Grille Elle ne change pas dans tout le programme */

typedef struct cord
{
     int *ligne;
     int *colonne;
}Cord;

Cord cord;
Grille grille;

/* Procedure qui initialise les Cordonnees maximale du jeu */

void init(Cord cord)
{
     /* Initialisation de la structure cord */
     
     /*cord = malloc(sizeof(Cord));*/
     
     printf("Entre le nombre de Ligne : ");
     scanf("%d", &cord->ligne);
     printf("Entre le nombre de Colonne : ");
     scanf("%d", cord.colonne);
     
     printf("\n\nLigne = %d colonne = %d\n\n", &cord.ligne, &cord.colonne); 
}

/* Procedure qui initialise Nos Grilles GrilleJeu & GrilleVue */

void initGrille(Grille grille, Cord cord)
{
     int i = 0;
     int j = 0;
     
     printf("Ligne = %d colonne = %d\n", cord.ligne, cord.colonne);
     
     /* Initialisation des trableaux qui contiennent respectivement notre grille de jeu et de vue */
     
     grille.grilleJeu = malloc(sizeof(char *)*cord.ligne);
     grille.grilleVue = malloc(sizeof(int *)*cord.ligne);
     
     for(i=0; i<cord.ligne; i++)
     {
	  grille.grilleJeu[i] = malloc(sizeof(char)*cord.colonne);
	  grille.grilleVue[i] = malloc(sizeof(int)*cord.colonne);
	  
     }
     for(i=0; i<cord.ligne; j++)
     {
	  for(j=0; j<cord.colonne; j++)
	  {
	       /* En un parcours de boucle je crois que ce serrait bien de remplir les valeurs en même temps et ansi
	       * Faire une seule boucle imbriquer */
	       grille.grilleJeu[i][j] = rand () % 26 + 'A';
	       grille.grilleVue[i][j] = NOT_SEEN;
	  }
     }
}

/* Procedure qui permet d'afficher une grille */

void draw(Grille grille, Cord cord)
{
     int i;
     int j;
     
     for(i=0; i<cord.ligne; i++)
     {
	  printf("------------------------------\n");
	  for(j=0; j<cord.colonne; j++)
	  {
	       printf("| %c ", grille.grilleVue[i][j]);
	  }
	  printf("|\n");
     }
     printf("------------------------------\n");
}

int main(int argc, char *argv[])
{    
     /* Phase d'initialisation */
     
     init(cord);
     
     initGrille(grille, cord);
     
     /* Phase d'affichage */
     
     draw(grille, cord);
     
     
     
     /* Juste avant de sortir du programme on detruit toutes nos structures */
     
     return 0;
}